plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.migros'
version = '1.0.0'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	testcontainersVersion = "1.19.1"
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation group: 'org.projectlombok', name: 'lombok-mapstruct-binding', version: '0.2.0'
	implementation 'org.hibernate.orm:hibernate-spatial'
	implementation 'org.postgresql:postgresql'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

	compileOnly 'org.mapstruct:mapstruct:1.5.5.Final'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.testcontainers:postgresql'

	testImplementation 'org.testcontainers:postgis'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

compileJava {
	options.compilerArgs = [
			'-Amapstruct.defaultComponentModel=spring'
	]
}

tasks.named('test') {
	useJUnitPlatform()
}

dependencyManagement {
	imports {
		mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
	}
}